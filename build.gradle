apply plugin: 'java'
apply plugin: 'spring-boot'

defaultTasks 'distTar'

group   = 'com.goldin.echo'
version = '0.0.1-SNAPSHOT'
// noinspection GroovyUnusedAssignment
sourceCompatibility     = 1.8
// noinspection GroovyUnusedAssignment
targetCompatibility     = 1.8
final portNumber        = 8080
// https://jcenter.bintray.com/org/springframework/boot/spring-boot-starter-web/
final springBootVersion = '1.2.2.RELEASE'
// https://jcenter.bintray.com/org/eclipse/jetty/jetty-webapp/
final jettyVersion      = '9.2.9.v20150224'

buildscript {
  // https://docs.spring.io/spring-boot/docs/1.2.1.RELEASE/reference/htmlsingle/#getting-started-gradle-installation
  repositories { jcenter() }
  dependencies { classpath( 'org.springframework.boot:spring-boot-gradle-plugin:1.2.1.RELEASE' )}
}

repositories { jcenter() }


configurations {
  compile.exclude module: 'spring-boot-starter-tomcat'
}

dependencies {
  // https://jcenter.bintray.com/org/springframework/boot/spring-boot-starter-web/
  // https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-servlet-containers.html#howto-use-jetty-instead-of-tomcat
  compile( "org.springframework.boot:spring-boot-starter-web:$springBootVersion",
           "org.springframework.boot:spring-boot-starter-jetty:$springBootVersion",
           "org.eclipse.jetty:jetty-jsp:$jettyVersion",
           "org.eclipse.jetty:jetty-webapp:$jettyVersion",
           "org.eclipse.jetty.websocket:websocket-server:$jettyVersion",
           "org.eclipse.jetty.websocket:javax-websocket-server-impl:$jettyVersion",
           "org.eclipse.jetty.websocket:javax-websocket-client-impl:$jettyVersion",
           "org.eclipse.jetty.websocket:websocket-server:$jettyVersion",
  // https://jcenter.bintray.com/com/google/guava/guava/
           "com.google.guava:guava:18.0" )
}

processResources {
  filter ( org.apache.tools.ant.filters.ReplaceTokens, tokens: [ 'portNumber' : String.valueOf( portNumber ) ])
}


def env( String name, String defaultValue = null ) {
  final  value = System.getenv( name )
  assert ( value != null ) || ( defaultValue != null ), "Undefined environment variable '$name' and no default value was specified"
  ( value != null ) ? value : defaultValue
}


println "> Running Gradle [${ project.gradle.gradleVersion }], Groovy [${ GroovySystem.version }], Java [${ System.getProperty( 'java.version' ) }]"
println "> Building [${ project.group }:${ project.name }:${ project.version }]"

task wrapper( type: Wrapper ) { gradleVersion = '2.3' }
